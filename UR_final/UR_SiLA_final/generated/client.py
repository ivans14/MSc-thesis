# Generated by sila2.code_generator; sila2.__version__: 0.10.1
from __future__ import annotations

from typing import Set

from sila2.client import SilaClient
from sila2.framework import FullyQualifiedFeatureIdentifier

from .labwaretransfermanipulatorurcontroller import (
    InvalidCommandSequence,
    LabwareNotPicked,
    LabwareNotPlaced,
    LabwareTransferManipulatorURControllerClient,
    LabwareTransferManipulatorURControllerFeature,
)
from .labwaretransfersitefestocontroller import (
    InvalidCommandSequence,
    LabwareNotPicked,
    LabwareNotPlaced,
    LabwareTransferSiteFestoControllerClient,
    LabwareTransferSiteFestoControllerFeature,
)
from .labwaretransfersiteurcontroller import (
    InvalidCommandSequence,
    LabwareNotPicked,
    LabwareNotPlaced,
    LabwareTransferSiteURControllerClient,
    LabwareTransferSiteURControllerFeature,
)
from .robotcontroller import InvalidParameters, RobotControllerClient, RobotControllerFeature


class Client(SilaClient):
    LabwareTransferSiteURController: LabwareTransferSiteURControllerClient

    LabwareTransferManipulatorURController: LabwareTransferManipulatorURControllerClient

    LabwareTransferSiteFestoController: LabwareTransferSiteFestoControllerClient

    RobotController: RobotControllerClient

    _expected_features: Set[FullyQualifiedFeatureIdentifier] = {
        FullyQualifiedFeatureIdentifier("org.silastandard/core/SiLAService/v1"),
        FullyQualifiedFeatureIdentifier("org.silastandard/labware.manipulation/LabwareTransferSiteURController/v1"),
        FullyQualifiedFeatureIdentifier(
            "org.silastandard/labware.manipulation/LabwareTransferManipulatorURController/v1"
        ),
        FullyQualifiedFeatureIdentifier("org.silastandard/labware.manipulation/LabwareTransferSiteFestoController/v1"),
        FullyQualifiedFeatureIdentifier("org.silastandard/core/RobotController/v1"),
    }

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

        self._register_defined_execution_error_class(
            LabwareTransferSiteURControllerFeature.defined_execution_errors["InvalidCommandSequence"],
            InvalidCommandSequence,
        )

        self._register_defined_execution_error_class(
            LabwareTransferSiteURControllerFeature.defined_execution_errors["LabwareNotPicked"], LabwareNotPicked
        )

        self._register_defined_execution_error_class(
            LabwareTransferSiteURControllerFeature.defined_execution_errors["LabwareNotPlaced"], LabwareNotPlaced
        )

        self._register_defined_execution_error_class(
            LabwareTransferManipulatorURControllerFeature.defined_execution_errors["InvalidCommandSequence"],
            InvalidCommandSequence,
        )

        self._register_defined_execution_error_class(
            LabwareTransferManipulatorURControllerFeature.defined_execution_errors["LabwareNotPicked"], LabwareNotPicked
        )

        self._register_defined_execution_error_class(
            LabwareTransferManipulatorURControllerFeature.defined_execution_errors["LabwareNotPlaced"], LabwareNotPlaced
        )

        self._register_defined_execution_error_class(
            LabwareTransferSiteFestoControllerFeature.defined_execution_errors["InvalidCommandSequence"],
            InvalidCommandSequence,
        )

        self._register_defined_execution_error_class(
            LabwareTransferSiteFestoControllerFeature.defined_execution_errors["LabwareNotPicked"], LabwareNotPicked
        )

        self._register_defined_execution_error_class(
            LabwareTransferSiteFestoControllerFeature.defined_execution_errors["LabwareNotPlaced"], LabwareNotPlaced
        )

        self._register_defined_execution_error_class(
            RobotControllerFeature.defined_execution_errors["InvalidParameters"], InvalidParameters
        )

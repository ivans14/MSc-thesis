# Generated by sila2.code_generator; sila2.__version__: 0.10.1

from typing import Optional
from uuid import UUID

from sila2.server import SilaServer

from .feature_implementations.labwaretransfermanipulatorurcontroller_impl import (
    LabwareTransferManipulatorURControllerImpl,
)
from .feature_implementations.labwaretransfersitefestocontroller_impl import LabwareTransferSiteFestoControllerImpl
from .feature_implementations.labwaretransfersiteurcontroller_impl import LabwareTransferSiteURControllerImpl
from .feature_implementations.robotcontroller_impl import RobotControllerImpl
from .generated.labwaretransfermanipulatorurcontroller import LabwareTransferManipulatorURControllerFeature
from .generated.labwaretransfersitefestocontroller import LabwareTransferSiteFestoControllerFeature
from .generated.labwaretransfersiteurcontroller import LabwareTransferSiteURControllerFeature
from .generated.robotcontroller import RobotControllerFeature
from .UR_test_env3.UR_Arm import UR_Robot

class Server(SilaServer):
    def __init__(self, server_uuid: Optional[UUID] = None):
        # TODO: fill in your server information
        super().__init__(
            server_name="Penny",
            server_type="Device",
            server_version="0.1",
            server_description="Penny Robot Implementation",
            server_vendor_url="https://gitlab.com/SiLA2/sila_python",
            server_uuid=server_uuid,
        )


        self.labwaretransfersiteurcontroller = LabwareTransferSiteURControllerImpl(self)
        self.set_feature_implementation(LabwareTransferSiteURControllerFeature, self.labwaretransfersiteurcontroller)

        self.labwaretransfermanipulatorurcontroller = LabwareTransferManipulatorURControllerImpl(self)
        self.set_feature_implementation(
            LabwareTransferManipulatorURControllerFeature, self.labwaretransfermanipulatorurcontroller
        )

        self.labwaretransfersitefestocontroller = LabwareTransferSiteFestoControllerImpl(self)
        self.set_feature_implementation(
            LabwareTransferSiteFestoControllerFeature, self.labwaretransfersitefestocontroller
        )

        self.robot_interface = UR_Robot('192.168.0.30') 
        # self.robot_interface = UR_Robot('192.168.0.30',self.labwaretransfersitefestocontroller, 
            # LabwareTransferSiteURControllerFeature, self.labwaretransfermanipulatorurcontroller)
        
        self.robotcontroller = RobotControllerImpl(self)
        self.set_feature_implementation(RobotControllerFeature, self.robotcontroller)

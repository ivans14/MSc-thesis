# Generated by sila2.code_generator; sila2.__version__: 0.9.2
# -----
# This class does not do anything useful at runtime. Its only purpose is to provide type annotations.
# Since sphinx does not support .pyi files (yet?), so this is a .py file.
# -----

from __future__ import annotations

from typing import TYPE_CHECKING

if TYPE_CHECKING:

    from datetime import time
    from typing import Iterable, Optional

    from timerprovider_types import Countdown_IntermediateResponses, Countdown_Responses

    from sila2.client import (
        ClientMetadataInstance,
        ClientObservableCommandInstanceWithIntermediateResponses,
        ClientObservableProperty,
    )


class TimerProviderClient:
    """
    Provides a timer command and the current time
    """

    CurrentTime: ClientObservableProperty[time]
    """
    The current time
    """

    def Countdown(
        self, N: int, Message: str, *, metadata: Optional[Iterable[ClientMetadataInstance]] = None
    ) -> ClientObservableCommandInstanceWithIntermediateResponses[Countdown_IntermediateResponses, Countdown_Responses]:
        """
        Count down from N to 0, then return the given message and the current time
        """
        ...

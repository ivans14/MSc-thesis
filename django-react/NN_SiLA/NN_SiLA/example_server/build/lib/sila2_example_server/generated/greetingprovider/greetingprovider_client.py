# Generated by sila2.code_generator; sila2.__version__: 0.9.2
# -----
# This class does not do anything useful at runtime. Its only purpose is to provide type annotations.
# Since sphinx does not support .pyi files (yet?), so this is a .py file.
# -----

from __future__ import annotations

from typing import TYPE_CHECKING

if TYPE_CHECKING:

    from typing import Iterable, Optional

    from greetingprovider_types import SayHello_Responses

    from sila2.client import ClientMetadataInstance, ClientUnobservableProperty


class GreetingProviderClient:
    """
    Example implementation of a minimum Feature. Provides a Greeting to the Client
    and a StartYear property, informing about the year the Server has been started.
    """

    StartYear: ClientUnobservableProperty[int]
    """
    Returns the year the SiLA Server has been started in.
    """

    def SayHello(self, Name: str, *, metadata: Optional[Iterable[ClientMetadataInstance]] = None) -> SayHello_Responses:
        """
        Does what it says: returns "Hello SiLA 2 + [Name]" to the client.
        """
        ...

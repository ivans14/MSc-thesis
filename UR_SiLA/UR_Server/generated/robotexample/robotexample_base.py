# Generated by sila2.code_generator; sila2.__version__: 0.7.3
from __future__ import annotations

from abc import ABC, abstractmethod
from typing import TYPE_CHECKING

from sila2.server import FeatureImplementationBase, MetadataDict

from .robotexample_types import GoToHomePosition_Responses

if TYPE_CHECKING:
    from ...server import Server


class RobotExampleBase(FeatureImplementationBase, ABC):
    parent_server: Server

    def __init__(self, parent_server: Server):
        """
        An Example
        """
        super().__init__(parent_server=parent_server)

    @abstractmethod
    def get_BatteryState(self, *, metadata: MetadataDict) -> float:
        """
        Gets the battery state

        :param metadata: The SiLA Client Metadata attached to the call
        :return: Gets the battery state
        """
        pass

    @abstractmethod
    def GoToHomePosition(self, *, metadata: MetadataDict) -> GoToHomePosition_Responses:
        """
        Makes the robot go to the home position


        :param metadata: The SiLA Client Metadata attached to the call

        """
        pass

# Generated by sila2.code_generator; sila2.__version__: 0.7.3
from __future__ import annotations

from typing import Optional

from sila2.framework.errors.defined_execution_error import DefinedExecutionError

from .labwaretransfercontroller_feature import LabwareTransferControllerFeature


class InvalidCommandSequence(DefinedExecutionError):
    def __init__(self, message: Optional[str] = None):
        if message is None:
            message = "The issued command does not follow the sequence of commands for the device according to its role in the labware transfer."
        super().__init__(
            LabwareTransferControllerFeature.defined_execution_errors["InvalidCommandSequence"], message=message
        )


class LabwareNotPicked(DefinedExecutionError):
    def __init__(self, message: Optional[str] = None):
        if message is None:
            message = "Picking up the labware item from the source device failed."
        super().__init__(LabwareTransferControllerFeature.defined_execution_errors["LabwareNotPicked"], message=message)


class LabwareNotPlaced(DefinedExecutionError):
    def __init__(self, message: Optional[str] = None):
        if message is None:
            message = "Placing the labware item at the destination device failed."
        super().__init__(LabwareTransferControllerFeature.defined_execution_errors["LabwareNotPlaced"], message=message)
